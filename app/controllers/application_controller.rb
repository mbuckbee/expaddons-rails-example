class ApplicationController < ActionController::Base
  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  protect_from_forgery with: :exception


  def load_apis

  	@apis = [{"id"=>6, "slug"=>"geocody", "name"=>"Geocody", "tagline"=>"Convert mailing addresses into Lat,Long Coordinates", "output_fields"=>[["found", "string", "Number of addresses found matching the mailing address given"], ["country", "string", "Full name of the located country"], ["country_code", "string", "ISO country code of the located address"], ["postal_code", "string", "Postal code of the location"], ["address", "string", "The address that was used for location lookup"], ["city", "string", "City of the located address"], ["latitude", "float", "Latitude of the address"], ["longitude", "float", "Longitude of the located address"], ["state", "string", "State or Region of the located address"]], "input_fields"=>[["address", "Yes", "string", "1432 Greenbrier Pkwy, Chesapeake, VA 23320", "The address or partial address to try and locate"], ["country_code", "No", "string", "US", "The ISO 2-letter country code to be biased towards (default is no country bias)"], ["language_code", "No", "string", "en", "The language to display results in, available languages are: de, en, es, fr, it, pt, ru"]]}, {"id"=>7, "slug"=>"ipinvestigator", "name"=>"IP Investigator", "tagline"=>"Check if an IP address is hosting Proxies, Bots or Malware.", "output_fields"=>[["is_listed", "boolean", "Is this IP on a blocklist"], ["list_count", "integer", "The number of blocklists the IP is listed on"], ["last_seen", "integer", "The last time this IP was seen on a blocklist (in Unix time or 0 if not listed recently)"], ["is_proxy", "boolean", "IP has been detected as an anonymous web proxy or anonymous HTTP proxy"], ["is_tor", "boolean", "IP is coming from a Tor node"], ["is_vpn", "boolean", "IP has been detected as coming from a VPN hosting provider"], ["is_malware", "boolean", "IP is involved in distributing malware"], ["is_spyware", "boolean", "IP is being used by spyware, malware, botnets or for other malicious activities"], ["is_dshield", "boolean", "IP has been flagged on DShield (dshield.org)"], ["is_hijacked", "boolean", "hijacked netblocks or netblocks controlled by criminal organizations"], ["is_spider", "boolean", "IP is a hostile spider or crawler"], ["is_bot", "boolean", "IP is hosting a malicious bot or is part of a botnet"], ["is_spam_bot", "boolean", "IP address is hosting a spam bot, comment spamming or other spamming software"], ["is_exploit_bot", "boolean", "IP is hosting an exploit finding bot or exploit scanning software"]], "input_fields"=>[["ip", "Yes", "string", "68.10.149.45", "IPv4 or IPv6 address"]]}, {"id"=>5, "slug"=>"iptoearth", "name"=>"IP to Earth", "tagline"=>"Find the Country and City of origin for an IP Address", "output_fields"=>[["valid", "boolean", "If the IP Address passed in is syntactically valid"], ["country", "string", "Full country name where the IP address is located"], ["country_code", "string", "ISO Country Code for the IP Address"], ["hostname", "string", "Hostname - if any - for the IP address"], ["city", "string", "City where the IP Address is located"], ["ip", "string", "IP address that was evaluated"], ["latitude", "float", "Geographic latitude of the identified IP address"], ["longitude", "float", "Geographic longitude of the identified IP address"], ["region", "string", "State or Region where the IP address is located"]], "input_fields"=>[["ip", "Yes", "string", "68.10.149.45", "IPv4 or IPv6 address"]]}, {"id"=>12, "slug"=>"qrackajack", "name"=>"Qrackajack", "tagline"=>"Generate QR codes for use anywhere", "output_fields"=>[], "input_fields"=>[["content", "Yes", "string", "http://example.org", "The content to encode into the QR code (e.g. a URL or a phone number)"], ["width", "No", "integer", "256", "The width of the QR code (in px)"], ["height", "No", "integer", "256", "The height of the QR code (in px)"], ["fg_color", "No", "string", "#000000", "The QR code foreground color (you should always use a dark color for this)"], ["bg_color", "No", "string", "#ffffff", "The QR code background color (you should always use a light color for this)"]]}, {"id"=>1, "slug"=>"realemail", "name"=>"Real Email", "tagline"=>"Reduce bounced emails and errors by validating emails against MX records.", "output_fields"=>[["valid", "boolean", "If the email address passes all tests for syntax, domain validity, disposability and free email"], ["domain_error", "boolean", "If the domain of the email address is valid and functional"], ["domain", "string", "The domain evaluated for validity"], ["is_freemail", "boolean", "If the evaluated email is from a free email service"], ["syntax_error", "boolean", "If the email address had a syntax error (missing @ symbol, etc.)"], ["email", "string", "The email that was evaluated"], ["is_disposable", "boolean", "If the email is from a disposable email service."], ["typos_fixed", "boolean", "True if typos have been fixed"]], "input_fields"=>[["email", "Yes", "string", "email@example.org", "The email address"], ["fix_typos", "No", "boolean", "false", "Automatically attempt to fix typos in the address"]]}, {"id"=>11, "slug"=>"resizer", "name"=>"Resizer", "tagline"=>"Resize images for Retina use, thumbnails and social promotion.", "output_fields"=>[], "input_fields"=>[["image_url", "Yes", "string", "https://app.expeditedaddons.com/base.png", "The URL to the source image"], ["width", "Yes", "integer", "100", "Width to resize to (in px)"], ["height", "Yes", "integer", "100", "Height to resize to (in px)"]]}, {"id"=>3, "slug"=>"scrapetastic", "name"=>"Scrapetastic", "tagline"=>"Pull structured data from any website.", "output_fields"=>[["total", "integer", "The total number of values extracted."], ["values", "array", "Array of extracted values"]], "input_fields"=>[["content", "Yes", "string", "http://www.wikipedia.org", "The HTML content. This can be either a URL to load HTML from or an actual HTML content string"], ["tag", "Yes", "string", "img", "The HTML tag(s) to extract data from. This can just be a simple tag name like 'img' OR a CSS/jQuery style selector"], ["attribute", "No", "string", "", "If set, then extract data from the specified tag attribute.If not set, then data will be extracted from the tags inner content"], ["base_url", "No", "string", "", "Set a new base URL to be used for relative links scraped from the content"]]}, {"id"=>8, "slug"=>"urlxray", "name"=>"URL X-Ray", "tagline"=>"Pull website status and domain information for any URL.", "output_fields"=>[["valid", "boolean", "Is this a valid well-formed URL"], ["real", "boolean", "Is this URL actually serving real content"], ["http_ok", "boolean", "True if this URL responded with an HTTP OK (200) status"], ["http_status", "integer", "The HTTP status code this URL responded with"], ["http_status_message", "integer", "The HTTP status message assoicated with the status code"], ["http_redirect", "boolean", "True if this URL responded with a HTTP redirect"], ["url", "string", "The fully qualified URL. This may be different to the URL requested if http-redirect is True"], ["url_protocol", "string", "The URL protocol (usually http or https)"], ["url_port", "integer", "The URL port"], ["url_path", "string", "The URL path"], ["query", "map", "A key:value map of the URL query paramaters"], ["content", "string", "The actual content this URL responded with. This is only set if the 'fetch-content' parameter was set"], ["content_size", "integer", "The size of the URL content in bytes"], ["content_type", "string", "The content-type the URL points to"], ["content_encoding", "string", "The encoding type the URL uses"], ["load_time", "float", "The time taken to load the URL content (in seconds)"], ["server_ip", "string", "The IP address of the server hosting this URL"], ["server_name", "string", "The name of the server software hosting this URL"], ["server_country", "string", "Server IP geo-location: full country name"], ["server_country_code", "string", "Server IP geo-location: ISO 2-letter country code"], ["server_city", "string", "Server IP geo-location: full city name (if detectable)"], ["server_region", "string", "Server IP geo-location: full region name (if detectable)"], ["server_hostname", "string", "The server hostname (PTR)"]], "input_fields"=>[["url", "Yes", "string", "http://www.wikipedia.org", "The URL to process"], ["fetch_content", "No", "boolean", "false", "If this URL responds with html, text, json or xml then return the response. This option is useful if you want to perform further processing on the URL content."]]}, {"id"=>2, "slug"=>"useragentidentifier", "name"=>"User Agent Identifier", "tagline"=>"Boost User Agent identification with our always up to date UA parsing", "output_fields"=>[["type", "string", "The user-agent type, possible values are: desktop-browser, email-client, feed-reader, software-library, media-player, mobile-browser, robot, unknown"], ["is_mobile", "boolean", "True if this is a mobile user-agent"], ["is_android", "boolean", "True if this is an Android based mobile user-agent"], ["is_ios", "boolean", "True if this is an iOS based mobile user-agent"], ["mobile_brand", "string", "Mobile device brand"], ["mobile_browser", "string", "Mobile device browser name (this is usually the same as the browser name)"], ["mobile_model", "string", "Mobile device model"], ["mobile_screen_width", "integer", "Mobile device screen width (in px)"], ["mobile_screen_height", "integer", "Mobile device screen height (in px)"], ["browser_name", "string", "Browser software name"], ["operating_system", "string", "The full operating system name which may include the major version number and code name"], ["operating_system_family", "string", "The operating system family name, that is the OS name without any version or code names appended"], ["operating_system_version", "string", "The operating system version number (if detectable)"], ["producer", "string", "Producer or manufacturer"], ["version", "string", "User-agent software version"]], "input_fields"=>[["user_agent", "Yes", "string", "Mozilla", "A user-agent string"]]}, {"id"=>10, "slug"=>"watermarker", "name"=>"Watermarker", "tagline"=>"Identify and protect images by adding a watermark to them.", "output_fields"=>[], "input_fields"=>[["image_url", "Yes", "string", "https://www.expeditedaddons.com/base.png", "The URL to the source image"], ["watermark_url", "Yes", "string", "https://www.expeditedaddons.com/watermark.png", "The URL to the watermark image"], ["opacity", "No", "integer", "50", "The opacity of the watermark (0 to 100)"], ["position", "No", "string", "center", "The position of the watermark image, possible values are: center, top-left, top-center, top-right, bottom-left, bottom-center, bottom-right"], ["width", "No", "integer", "100", "If set resize the resulting image to this width (preserving aspect ratio)"], ["height", "No", "integer", "100", "If set resize the resulting image to this height (preserving aspect ratio)"]]}, {"id"=>9, "slug"=>"webtopdf", "name"=>"Web to PDF", "tagline"=>"Generate PDF Documents from Webpages.", "output_fields"=>[], "input_fields"=>[["content", "Yes", "string", "http://www.wikipedia.org", "The HTML content. This can be either a URL to load HTML from or an actual HTML content string"], ["margin", "No", "integer", "10", "The PDF document margin (in mm)"], ["html_width", "No", "integer", "1024", "The width (in px) to render the HTML document at"], ["title", "No", "string", "My PDF Title", "The PDF document title"]]}, {"id"=>4, "slug"=>"weightsandmeasures", "name"=>"Weights and Measures", "tagline"=>"Conversational interface to convert between units of measure.", "output_fields"=>[["valid", "boolean", "Was the coversion successful and produced a valid result"], ["result", "string", "The result of the conversion"], ["from_value", "string", "The value being converted from"], ["from_type", "string", "The type of the value being converted from"], ["to_type", "string", "The type being converted to"]], "input_fields"=>[["from_value", "Yes", "string", "10", "The value to convert from (e.g. 10.00)"], ["from_type", "Yes", "string", "grams", "The type of the value to convert from"], ["to_type", "Yes", "string", "pounds", "The type to convert to (e.g. EUR)"]]}] 

  end

end
